{"version":3,"sources":["Api/api.js","Redux/emloyees-reducer.js","Components/Employees.jsx","Components/EmployeesContainer.jsx","App.js","reportWebVitals.js","Redux/redux-store.js","index.js","Components/Employees.module.css"],"names":["Employee","axios","ADD_ITEMS","SET_USERS","REM_USER","monthsArray","initial","items","months","map","month","name","id","console","log","employeesPage","state","action","type","users","length","i","choosedUser","filter","item","data","Date","dob","getMonth","push","arr_EN","Employees","React","memo","props","isEmpty","useState","checkboxs","setCheckboxs","useEffect","addItems","JSON","parse","localStorage","getItem","setItem","stringify","setUsers","className","style","employees","letter","member","lastName","charAt","sort","a","b","nameA","toUpperCase","nameB","forDiv","firstName","input","checked","indexOf","onChange","e","currentTarget","idCheck","checkboxChoose","empBirthday","user","connect","dispatch","response","App","to","activeClassName","path","render","EmployeesContainer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","require","createStore","applyMiddleware","combineReducers","store","compose","thunkMiddleware","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.633e05f4.chunk.js","sourcesContent":["import * as axios from 'axios';\r\n// const axios = require('axios');\r\n\r\n\r\nexport const Employee = {\r\n    \r\n    getEmployee ()  {\r\n        return axios.get(`https://yalantis-react-school-api.yalantis.com/api/task0/users`);\r\n    }\r\n}\r\n","import { Employee } from \"../Api/api\";\r\n\r\nconst ADD_ITEMS = 'ADD-ITEMS';\r\nconst SET_USERS = 'SET-USERS';\r\nconst REM_USER = 'REMOVE-USERS';\r\n\r\nlet monthsArray= [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\r\n            \"August\",\"September\",\"October\",\"November\",\"December\"];\r\nlet monthsA = monthsArray.map(month => {return {name: month, id: []}});\r\n\r\nlet initial = {\r\n    items: [],\r\n    months: monthsA\r\n}\r\n\r\nconsole.log(initial.months);\r\n\r\nconst employeesPage = (state = initial, action) => {\r\n    switch (action.type) {\r\n        case ADD_ITEMS: {\r\n           \r\n            return {\r\n                ...state,\r\n                items: action.items\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            console.log(action.users);\r\n            \r\n            if (action.users.length === 0){\r\n                state.months = monthsArray.map(month => {return {name: month, id: []}});\r\n            }\r\n            \r\n           for (let i = 0; i < action.users.length; i++) {\r\n                let choosedUser = state.items.filter(item => item.id === action.users[i]);\r\n                let data = new Date(choosedUser[0].dob);\r\n                state.months[(data.getMonth() + 1)].id.push(choosedUser[0]);\r\n           }\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n        case REM_USER: {\r\n            \r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst addItemsAC = (items) => ({ type: ADD_ITEMS, items });\r\nexport const setUsersAC = (users) => ({type: SET_USERS, users});\r\nexport const removeUserAC = (userId) => ({type: REM_USER, userId})\r\n\r\nexport const addItemsThunk = () => async (dispatch) => {\r\n    const response = await Employee.getEmployee();\r\n    dispatch(addItemsAC(response.data));\r\n}\r\n\r\nexport default employeesPage;","import style from './Employees.module.css'\r\nimport React, { useState, useEffect } from 'react';\r\nconst arr_EN = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\r\n\r\nconst Employees = React.memo(props => {\r\n\r\n    let [checkboxs, setCheckboxs] = useState([]);\r\n    \r\n    useEffect(() => {//getPeople\r\n        props.addItems();\r\n        \r\n    }, [props.items.length]);\r\n\r\n   \r\n    let isEmpty;\r\n    \r\n    let checkboxChoose = (id, e) => {\r\n        if (e.currentTarget.checked) {\r\n            setCheckboxs([...checkboxs, id]);\r\n        }\r\n        else{\r\n            setCheckboxs(checkboxs.filter((idCheck) => idCheck !== id));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let items = JSON.parse(localStorage.getItem('items'));\r\n        if(items){\r\n            setCheckboxs(items);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('items', JSON.stringify(checkboxs));\r\n\r\n    }, [checkboxs]);\r\n    // ---------------------------------------------------------------for Birthdays\r\n\r\n    useEffect(() => {\r\n        if(props.items.length !=0 ){\r\n            props.setUsers([]); \r\n            props.setUsers(checkboxs);  \r\n        }\r\n\r\n    }, [checkboxs, props.items.length]); \r\n\r\n    return (<>\r\n        <div className={style.employees}>\r\n            Employees\r\n           <div>\r\n                {arr_EN\r\n                    .map((letter) => {\r\n                       \r\n                        return (\r\n                        <div className={style.letter}>\r\n                            <span>\r\n                                {letter + ' '}\r\n                            </span>\r\n                            {props.items\r\n                            .filter(member => {\r\n                                isEmpty = false;\r\n                                return member.lastName.charAt(0) === letter})\r\n                            .sort(function(a, b) {\r\n                                var nameA = a.lastName.toUpperCase();\r\n                                var nameB = b.lastName.toUpperCase();\r\n                                if (nameA < nameB) {\r\n                                  return -1;\r\n                                }\r\n                                if (nameA > nameB) {\r\n                                  return 1;\r\n                                }\r\n                                return 0;\r\n                                })\r\n                            .map(member => {\r\n                                isEmpty = true;\r\n                                return <div className={style.forDiv}>\r\n                                    <span className={style.name}>{member.lastName + member.firstName}</span> \r\n                                    <input \r\n                                    className={style.input} \r\n                                    id={member.id} \r\n                                    checked={checkboxs.indexOf(member.id) != -1}\r\n                                    type=\"checkbox\" \r\n                                    onChange={(e) => checkboxChoose(member.id, e)}/>\r\n                                </div>})\r\n                            }\r\n                            <div>\r\n                                {!isEmpty\r\n                                && <div>---------</div>}\r\n                            </div>\r\n                        </div>)\r\n                })\r\n                    }\r\n                    \r\n                    \r\n            </div>\r\n        </div>\r\n        <div className={style.empBirthday}>\r\n           Employees Birthdays\r\n            {/* Прізвище Імя - день(31) Місяць, рік(1944) year*/}\r\n            {\r\n                props.months.map(\r\n                    month => {\r\n                        return month.id.length != 0 \r\n                        && \r\n                        <div> \r\n                            <h3>\r\n                                {month.name}\r\n                            </h3>\r\n                            {\r\n                                month.id.map(user => { return <div> {user.lastName + ' ' + ' ' + user.firstName } </div> })\r\n                            }\r\n                        </div>\r\n                    }\r\n                )\r\n            }\r\n        \r\n        </div>\r\n    </>);\r\n});\r\nexport default Employees;\r\n\r\n","import { connect } from \"react-redux\";\r\nimport { addItemsThunk, setUsersAC } from \"../Redux/emloyees-reducer\";\r\nimport Employees from \"./Employees\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        items: state.employees.items,\r\n        months: state.employees.months\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        addItems: addItemsThunk,\r\n        setUsers: setUsersAC\r\n    }\r\n)(Employees);\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport { NavLink, Route, Router } from 'react-router-dom';\nimport EmployeesContainer from './Components/EmployeesContainer';\n\nfunction App() {\n  return (\n    <div>\n      <header className=\"App-header\">\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n        <NavLink to='/employees' className='navLink' activeClassName='activeNavLink'>\n          EMPLOYEES\n        </NavLink>\n\n      </header>\n      <div className='content'>\n        {/* Click to the 'employees' to start */}\n        <Route path='/employees' render={() => <EmployeesContainer />} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import thunkMiddleware from \"redux-thunk\";\r\nimport employeesPage from \"./emloyees-reducer\";\r\nconst { createStore, applyMiddleware, combineReducers, compose } = require(\"redux\");\r\n\r\nconst reducers = combineReducers({\r\n    employees: employeesPage\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\nimport store from './Redux/redux-store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"empBirthday\":\"Employees_empBirthday__2NDgo\",\"employees\":\"Employees_employees__-oUkz\",\"letter\":\"Employees_letter__3h8pk\",\"forDiv\":\"Employees_forDiv__oPiQy\",\"name\":\"Employees_name__1YNdf\",\"input\":\"Employees_input__3Then\"};"],"sourceRoot":""}
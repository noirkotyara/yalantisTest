{"version":3,"sources":["Components/Employees.module.css","Api/api.js","Redux/emloyees-reducer.js","Components/Employees.jsx","Components/EmployeesContainer.jsx","App.js","reportWebVitals.js","Redux/redux-store.js","index.js"],"names":["module","exports","instance","axios","baseURL","Employee","get","then","resp","ADD_ITEMS","initial","items","addItemsAC","type","employeesPage","state","action","Employees","props","useEffect","addItems","console","log","className","style","employees","empBirthday","connect","dispatch","a","response","App","to","activeClassName","path","render","EmployeesContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","require","createStore","applyMiddleware","combineReducers","store","compose","thunkMiddleware","ReactDOM","document","getElementById"],"mappings":"sFACAA,EAAOC,QAAU,CAAC,YAAc,+BAA+B,UAAY,+B,0LCCrEC,E,MAAWC,OAAa,CAC1BC,QAAS,mEAGAC,EAAW,WAEhB,OAAOH,EAASI,IAAT,UACFC,MAAK,SAAAC,QCPZC,EAAY,YAGdC,EAAU,CACVC,MAAO,IAgBLC,EAAa,SAACD,GAAD,MAAY,CAACE,KAAMJ,EAAWE,UAQlCG,EArBO,WAA8B,IAA7BC,EAA4B,uDAApBL,EAASM,EAAW,uCAC/C,OAAQA,EAAOH,MACX,KAAKJ,EACD,OAAO,2BACAM,GADP,IAEIJ,MAAOK,EAAOL,QAGtB,QACI,OAAOI,I,iBCEJE,EAjBG,SAACC,GAKf,OAJAC,qBAAU,WACND,EAAME,WACNC,QAAQC,IAAIJ,MAET,qCACH,sBAAKK,UAAWC,IAAMC,UAAtB,sBAEG,2BAIH,qBAAKF,UAAWC,IAAME,YAAtB,qCCJOC,eANS,SAACZ,GACrB,MAAO,CACHJ,MAAOI,EAAMU,UAAUd,SAM3B,CAACS,SFWwB,SAACT,GAAD,8CAAW,WAAOiB,GAAP,eAAAC,EAAA,sEACbxB,IADa,OAC9ByB,EAD8B,OAGpClB,EAAWkB,GAHyB,2CAAX,wDEbdH,CAGbV,GCSac,MAlBf,WACE,OACE,gCACE,wBAAQR,UAAU,aAAlB,SAEE,cAAC,IAAD,CAASS,GAAG,aAAaT,UAAU,UAAUU,gBAAgB,gBAA7D,yBAKF,qBAAKV,UAAU,UAAf,SAEE,cAAC,IAAD,CAAOW,KAAK,aAAaC,OAAQ,kBAAM,cAACC,EAAD,aCLhCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,UCLqDO,EAAQ,IAAnEC,E,EAAAA,YAAaC,E,EAAAA,gBAAiBC,E,EAAAA,gBASvBC,G,EATwCC,QAMzCJ,EAJGE,EAAgB,CAC7BvB,UAAWX,IAGqBiC,EAAgBI,OCCpDC,IAASjB,OAEP,cAAC,IAAD,UACE,cAAC,IAAD,CAAUc,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJI,SAASC,eAAe,SAM1BjB,M","file":"static/js/main.e79a1d68.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"empBirthday\":\"Employees_empBirthday__2NDgo\",\"employees\":\"Employees_employees__-oUkz\"};","import * as axios from 'axios';\r\n// const axios = require('axios');\r\nconst instance = axios.create({\r\n    baseURL: 'â€‹https://yalantis-react-school-api.yalantis.com/api/task0'\r\n});\r\n\r\nexport const Employee = {\r\n    getEmployee ()  {\r\n        return instance.get(`/users`)\r\n            .then(resp => { debugger; })\r\n    }\r\n}\r\n","import { Employee } from \"../Api/api\";\r\n\r\nconst ADD_ITEMS = 'ADD-ITEMS';\r\n\r\n\r\nlet initial = {\r\n    items: []\r\n}\r\n\r\nconst employeesPage = (state = initial, action) => {\r\n    switch (action.type) {\r\n        case ADD_ITEMS: {\r\n            return {\r\n                ...state,\r\n                items: action.items\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst addItemsAC = (items) => ({type: ADD_ITEMS, items});\r\n\r\nexport const addItemsThunk = (items) => async (dispatch) => {\r\n    const response = await Employee.getEmployee(); \r\n    debugger;\r\n    addItemsAC(response);\r\n}\r\n\r\nexport default employeesPage;","import style from './Employees.module.css'\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst Employees = (props) => {\r\n    useEffect(() => {\r\n        props.addItems();\r\n        console.log(props);\r\n    })\r\n    return(<>\r\n        <div className={style.employees}>\r\n           Employees\r\n           <div>\r\n               \r\n           </div>\r\n        </div>\r\n        <div className={style.empBirthday}>\r\n            Employees Birthdays\r\n        </div>\r\n    </>);\r\n}\r\nexport default Employees;","import { connect } from \"react-redux\";\r\nimport { addItemsThunk } from \"../Redux/emloyees-reducer\";\r\nimport Employees from \"./Employees\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        items: state.employees.items\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {addItems: addItemsThunk}\r\n)(Employees);\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport { NavLink, Route, Router } from 'react-router-dom';\nimport EmployeesContainer from './Components/EmployeesContainer';\n\nfunction App() {\n  return (\n    <div>\n      <header className=\"App-header\">\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n        <NavLink to='/employees' className='navLink' activeClassName='activeNavLink'>\n          EMPLOYEES\n        </NavLink>\n\n      </header>\n      <div className='content'>\n        {/* Click to the 'employees' to start */}\n        <Route path='/employees' render={() => <EmployeesContainer />} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import thunkMiddleware from \"redux-thunk\";\r\nimport employeesPage from \"./emloyees-reducer\";\r\nconst { createStore, applyMiddleware, combineReducers, compose } = require(\"redux\");\r\n\r\nconst reducers = combineReducers({\r\n    employees: employeesPage\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\nimport store from './Redux/redux-store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}